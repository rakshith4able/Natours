/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*{
    margin:0;
    padding: 0;
    box-sizing: border-box;
}

body{
    font-family: "Lato",sans-serif;
    font-size: 16px;
    font-weight: 400;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header{
    height: 95vh;
    background-image: linear-gradient(to right bottom,#7ed56fc5,#28b485c5) ,url(../img/hero.jpg) ;
    background-size: cover;
    background-position:top;
    /* clip path is given with polygon with x y positions of vertices in clockwise direction */
    /* We can search online to get clip path maker code */
    clip-path: polygon(0 0,100% 0,100% 75vh, 0 100%);
    position: relative;
}

/* Styling Logo 
-Since img is inline element it is best practice to make it present inside a div 
-and we can use absolute positioning with parent set to relative and use top and left to position 
-we can set height of the image and width automatically scales */

.logo-box{
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo{
    height: 35px;
}

/* Styling Heading
- used spans to split h1 in to 2 lines
- by default spans will be inline make it block

Centering h1 
-Wrap heading with a div with some class
-set position absolute and top,left =50%
-This starts the box at 50% width and height
-So we have to translate back width to 50% of the content width 
- and height to 50% of the content height using transform
*/

.heading-primary{
    color: white;
    text-transform: uppercase;
    backface-visibility: hidden;
}

.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 1s;
    /* animation-iteration-count: 3; */
    animation-timing-function: ease-out;
}

.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    /* animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; */
    animation:moveInRight 1s ease-out;
}

.text-box{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}
/* Animations in CSS
-generally 2 types
-1. Using transition property and animate on event eg.on hover
-2. Using keyframes-

Syntax: 
@keyframes animation_name{
    start%{
        //properties
    }

    middle%{
        //properties      
    }

    finish%{
        //properties
    }

}

set  properties accordingly
animation-name:animationName; 
animation-duration:duration;
animation-delay:duration;
animation-iteration-count:count;
animation-timing-function:keyword;
or use shorthand animation:...;

if animations are shaky we can set parent element backface-visibility:hidden;
*/

@keyframes moveInLeft{
    0%{
        opacity: 0;
        transform: translateX(-100px);
    }

    80%{
        transform: translateX(10px);
    }

    100%{
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight{
    0%{
        opacity: 0;
        transform: translateX(100px);
    }

    80%{
        transform: translateX(-10px);
    }

    100%{
        opacity: 1;
        transform: translateX(0);
    }
}


